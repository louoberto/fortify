name: Python tests

on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  fortify-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout fortify repo
      uses: actions/checkout@v3
      with:
        path: fortify

    - name: Checkout test suite repo
      uses: actions/checkout@v3
      with:
        repository: louoberto/test
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        path: test

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install setuptools
      run: sudo python3 -m pip install setuptools
    
    - name: Install build-essential
      run: sudo apt-get install -y build-essential

    - name: Install dependencies
      run: pip install -r fortify/requirements.txt

    - name: Run driver on tests once
      run: |
        mkdir -p reports
        for file in test/testfile_??.f*; do
          base=$(basename "$file")
          keyfile="test/keyfile_${base#testfile_}"
          if [[ -f "$keyfile" ]]; then
            echo "Running: python fortify/source/fortify $file"
            python3 fortify/source/fortify "$file"
            # echo "Comparing $file with $keyfile"

            # Use tee to capture and display diff output
            diff "$file" "$keyfile" | tee reports/diff_${base#testfile_}.log
            if [[ $? -ne 0 ]]; then
              echo "Diff found for $file. See reports/diff_${base#testfile_}.log"
              echo "Diff found for $file" >> reports/diff.log
              exit 1
            else
              echo "No errors reported for $file" >> reports/diff.log
            fi
          else
            echo "Keyfile $keyfile not found for $file"
            echo "Keyfile $keyfile not found for $file" >> reports/diff.log
          fi
        done

    - name: Run driver on tests twice
      run: |
        mkdir -p reports
        for file in test/testfile_??.f*; do
          base=$(basename "$file")
          keyfile="test/keyfile_${base#testfile_}"
          if [[ -f "$keyfile" ]]; then
            echo "Running: python fortify/source/fortify $file"
            python3 fortify/source/fortify "$file"
            python3 fortify/source/fortify "$file"
            # echo "Comparing $file with $keyfile"

            # Use tee to capture and display diff output
            diff "$file" "$keyfile" | tee reports/diff_${base#testfile_}.log
            if [[ $? -ne 0 ]]; then
              echo "Diff found for $file. See reports/diff_${base#testfile_}.log"
              echo "Diff found for $file" >> reports/diff.log
              exit 1
            else
              echo "No errors reported for $file" >> reports/diff.log
            fi
          else
            echo "Keyfile $keyfile not found for $file"
            echo "Keyfile $keyfile not found for $file" >> reports/diff.log
          fi
        done

    - name: Run combo tests fixed format
      run: |
        num=1
        for lowercasing in "true" "false"; do
          for tab_len in "3" "4"; do
            for cont_char in "&" "A"; do
              for comment_char in "*" "C" "!"; do
                new_file="combo_keyfile_$(printf "%02d" $num).f"

                # Create temporary file with command
                echo "$comment_char --lowercasing $lowercasing --comment_character $comment_char --continuation_character $cont_char --tab_length $tab_len" > temp_file.txt
                echo "Combo: --lowercasing $lowercasing --comment_character $comment_char --continuation_character $cont_char --tab_length $tab_len"

                # Copy the test file and prepend the command
                cp test/testfile_38.f $new_file
                cat temp_file.txt "$new_file" > "$new_file.tmp" && mv "$new_file.tmp" "$new_file"

                # Run the fortify script
                python3 fortify/source/fortify $new_file \
                  --lowercasing $lowercasing \
                  --comment_character "$comment_char" \
                  --continuation_character "$cont_char" \
                  --tab_length "$tab_len"
                
                echo "python3 fortify/source/fortify $new_file \
                  --lowercasing $lowercasing \
                  --comment_character "$comment_char" \
                  --continuation_character "$cont_char" \
                  --tab_length "$tab_len""
                
                # Use tee to capture and display diff output
                echo "diff "$new_file" "test/$new_file""
                diff --color=always "$new_file" "test/$new_file" | tee reports/diff_${base#testfile_}.log
                if [[ $? -ne 0 ]]; then
                  echo "Diff found for $file. See reports/diff_${base#testfile_}.log"
                  echo "Diff found for $file" >> reports/diff.log
                  exit 1
                else
                  echo "No errors reported for $file" >> reports/diff.log
                fi

                # Increment the file number
                num=$((num + 1))
              done
            done
          done
        done
    
    - name: Upload reports as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: reports/*.log
    
    # - name: Post error log as PR comment (Always runs)
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const fs = require('fs');
    #       const logFile = 'reports/diff.log';
    #       if (fs.existsSync(logFile)) {
    #         const logData = fs.readFileSync(logFile, 'utf8');
    #         const body = `### Test Error Log\n\`\`\`\n${logData}\n\`\`\``;
    #         await github.rest.issues.createComment({
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #           issue_number: context.issue.number,
    #           body: body
    #         });
    #       }
